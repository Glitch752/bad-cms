{"version":3,"sources":["../src/index.js"],"names":["ajv","Ajv","$data","validate","compile","optionsSchema","getTargetResourcePath","path","stats","targetFileDirectoryPath","file","opts","filename","node","source","value","startsWith","require","resolve","isFilenameExcluded","exclude","match","RegExp","notForPlugin","extension","lastIndexOf","slice","filetypes","types","filenameMap","skip","setupFileForRuntimeResolution","programPath","findParent","parentPath","isProgram","importedHelperIndentifier","scope","generateUidIdentifier","styleModuleImportMapIdentifier","unshiftContainer","importDeclaration","importDefaultSpecifier","stringLiteral","firstNonImportDeclarationNode","get","find","isImportDeclaration","insertBefore","variableDeclaration","variableDeclarator","cloneNode","styleModuleImportMap","addWebpackHotModuleAccept","test","memberExpression","identifier","consequent","blockStatement","expressionStatement","callExpression","functionExpression","hotAcceptStatement","ifStatement","pushContainer","inherits","babelPluginJsxSyntax","visitor","ImportDeclaration","targetResourcePath","styleImportName","specifiers","length","local","name","console","warn","Error","context","generateScopedName","webpackHotModuleReloading","removeImport","remove","JSXElement","attributeNames","optionsDefaults","attributes","openingElement","filter","attribute","handleMissingStyleName","autoResolveMultipleImports","spreadMap","forEach","destinationName","options","isStringLiteral","isJSXExpressionContainer","Program","error","errors"],"mappings":"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","sourcesContent":["// @flow\n\nimport {\n  dirname,\n  resolve,\n} from 'path';\nimport babelPluginJsxSyntax from '@babel/plugin-syntax-jsx';\nimport BabelTypes from '@babel/types';\nimport Ajv from 'ajv';\nimport ajvKeywords from 'ajv-keywords';\nimport attributeNameExists from './attributeNameExists';\nimport createObjectExpression from './createObjectExpression';\nimport createSpreadMapper from './createSpreadMapper';\nimport handleSpreadClassName from './handleSpreadClassName';\nimport replaceJsxExpressionContainer from './replaceJsxExpressionContainer';\nimport requireCssModule from './requireCssModule';\nimport resolveStringLiteral from './resolveStringLiteral';\nimport optionsDefaults from './schemas/optionsDefaults';\nimport optionsSchema from './schemas/optionsSchema.json';\n\nconst ajv = new Ajv({\n  $data: true,\n});\n\najvKeywords(ajv);\n\nconst validate = ajv.compile(optionsSchema);\n\nconst getTargetResourcePath = (path: *, stats: *) => {\n  const targetFileDirectoryPath = dirname(stats.file.opts.filename);\n\n  if (path.node.source.value.startsWith('.')) {\n    return resolve(targetFileDirectoryPath, path.node.source.value);\n  }\n\n  return require.resolve(path.node.source.value);\n};\n\nconst isFilenameExcluded = (filename, exclude) => filename.match(new RegExp(exclude, 'u'));\n\nconst notForPlugin = (path: *, stats: *) => {\n  const extension = path.node.source.value.lastIndexOf('.') > -1\n    ? path.node.source.value.slice(path.node.source.value.lastIndexOf('.'))\n    : null;\n\n  if (extension !== '.css') {\n    const { filetypes } = stats.opts;\n    if (!filetypes || !filetypes[extension]) return true;\n  }\n\n  const filename = getTargetResourcePath(path, stats);\n\n  if (stats.opts.exclude && isFilenameExcluded(filename, stats.opts.exclude)) {\n    return true;\n  }\n\n  return false;\n};\n\nexport default ({\n  types,\n}: {|\n  types: typeof BabelTypes,\n|}): { ... } => {\n  const filenameMap = {};\n\n  let skip = false;\n\n  const setupFileForRuntimeResolution = (path, filename) => {\n    const programPath = path.findParent((parentPath) => parentPath.isProgram());\n\n    filenameMap[filename].importedHelperIndentifier = programPath.scope.generateUidIdentifier('getClassName');\n    filenameMap[filename].styleModuleImportMapIdentifier = programPath.scope.generateUidIdentifier('styleModuleImportMap');\n\n    programPath.unshiftContainer(\n      'body',\n      types.importDeclaration(\n        [\n          types.importDefaultSpecifier(\n            filenameMap[filename].importedHelperIndentifier,\n          ),\n        ],\n        types.stringLiteral('@dr.pogodin/babel-plugin-react-css-modules/dist/browser/getClassName'),\n      ),\n    );\n\n    const firstNonImportDeclarationNode = programPath.get('body').find((node) => !types.isImportDeclaration(node));\n\n    firstNonImportDeclarationNode.insertBefore(\n      types.variableDeclaration(\n        'const',\n        [\n          types.variableDeclarator(\n            types.cloneNode(\n              filenameMap[filename].styleModuleImportMapIdentifier,\n            ),\n            createObjectExpression(types, filenameMap[filename].styleModuleImportMap),\n          ),\n        ],\n      ),\n    );\n  };\n\n  const addWebpackHotModuleAccept = (path) => {\n    const test = types.memberExpression(types.identifier('module'), types.identifier('hot'));\n    const consequent = types.blockStatement([\n      types.expressionStatement(\n        types.callExpression(\n          types.memberExpression(\n            types.memberExpression(types.identifier('module'), types.identifier('hot')),\n            types.identifier('accept'),\n          ),\n          [\n            types.stringLiteral(path.node.source.value),\n            types.functionExpression(null, [], types.blockStatement([\n              types.expressionStatement(\n                types.callExpression(\n                  types.identifier('require'),\n                  [types.stringLiteral(path.node.source.value)],\n                ),\n              ),\n            ])),\n          ],\n        ),\n      ),\n    ]);\n\n    const programPath = path.findParent((parentPath) => parentPath.isProgram());\n\n    const firstNonImportDeclarationNode = programPath.get('body').find((node) => !types.isImportDeclaration(node));\n\n    const hotAcceptStatement = types.ifStatement(test, consequent);\n\n    if (firstNonImportDeclarationNode) {\n      firstNonImportDeclarationNode.insertBefore(hotAcceptStatement);\n    } else {\n      programPath.pushContainer('body', hotAcceptStatement);\n    }\n  };\n\n  return {\n    inherits: babelPluginJsxSyntax,\n    visitor: {\n      ImportDeclaration(path: *, stats: *): void {\n        if (skip || notForPlugin(path, stats)) {\n          return;\n        }\n\n        const { filename } = stats.file.opts;\n        const targetResourcePath = getTargetResourcePath(path, stats);\n\n        let styleImportName: string;\n\n        if (path.node.specifiers.length === 0) {\n          // use imported file path as import name\n          styleImportName = path.node.source.value;\n        } else if (path.node.specifiers.length === 1) {\n          styleImportName = path.node.specifiers[0].local.name;\n        } else {\n          // eslint-disable-next-line no-console\n          console.warn('Please report your use case. https://github.com/birdofpreyru/babel-plugin-react-css-modules/issues/new?title=Unexpected+use+case.');\n\n          throw new Error('Unexpected use case.');\n        }\n\n        filenameMap[filename]\n          .styleModuleImportMap[styleImportName] = requireCssModule(\n            targetResourcePath,\n            {\n              context: stats.opts.context,\n              filetypes: stats.opts.filetypes || {},\n              generateScopedName: stats.opts.generateScopedName,\n            },\n          );\n\n        if (stats.opts.webpackHotModuleReloading) {\n          addWebpackHotModuleAccept(path);\n        }\n\n        if (stats.opts.removeImport) {\n          path.remove();\n        }\n      },\n      JSXElement(path: *, stats: *): void {\n        if (skip) {\n          return;\n        }\n\n        const { filename } = stats.file.opts;\n\n        if (stats.opts.exclude && isFilenameExcluded(filename, stats.opts.exclude)) {\n          return;\n        }\n\n        let { attributeNames } = optionsDefaults;\n\n        if (stats.opts && stats.opts.attributeNames) {\n          attributeNames = { ...attributeNames, ...stats.opts.attributeNames };\n        }\n\n        const attributes = path.node.openingElement.attributes\n          .filter((attribute) => typeof attribute.name !== 'undefined' && typeof attributeNames[attribute.name.name] === 'string');\n\n        if (attributes.length === 0) {\n          return;\n        }\n\n        const {\n          handleMissingStyleName = optionsDefaults.handleMissingStyleName,\n          autoResolveMultipleImports = optionsDefaults.autoResolveMultipleImports,\n        } = stats.opts || {};\n\n        const spreadMap = createSpreadMapper(path, stats);\n\n        attributes.forEach((attribute) => {\n          const destinationName = attributeNames[attribute.name.name];\n\n          const options = {\n            autoResolveMultipleImports,\n            handleMissingStyleName,\n          };\n\n          if (types.isStringLiteral(attribute.value)) {\n            resolveStringLiteral(\n              path,\n              filenameMap[filename].styleModuleImportMap,\n              attribute,\n              destinationName,\n              options,\n            );\n          } else if (types.isJSXExpressionContainer(attribute.value)) {\n            if (!filenameMap[filename].importedHelperIndentifier) {\n              setupFileForRuntimeResolution(path, filename);\n            }\n\n            replaceJsxExpressionContainer(\n              types,\n              path,\n              attribute,\n              destinationName,\n              filenameMap[filename].importedHelperIndentifier,\n              types.cloneNode(filenameMap[filename].styleModuleImportMapIdentifier),\n              options,\n            );\n          }\n\n          if (spreadMap[destinationName]) {\n            handleSpreadClassName(\n              path,\n              destinationName,\n              spreadMap[destinationName],\n            );\n          }\n        });\n      },\n      Program(path: *, stats: *): void {\n        if (!validate(stats.opts)) {\n          // eslint-disable-next-line no-console\n          console.error(validate.errors);\n\n          throw new Error('Invalid configuration');\n        }\n\n        const { filename } = stats.file.opts;\n\n        filenameMap[filename] = {\n          styleModuleImportMap: {},\n        };\n\n        if (stats.opts.skip && !attributeNameExists(path, stats)) {\n          skip = true;\n        }\n      },\n    },\n  };\n};\n"],"file":"index.js"}